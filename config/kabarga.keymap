/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y  &kp U        &kp I      &kp O          &kp P     &kp LBKT
&kp LCTRL  &kp A  &kp S  &kp D             &kp F  &kp G        &kp H  &kp J        &kp K      &kp L          &kp SEMI  &kp SQT
&kp LALT   &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N  &kp M        &kp COMMA  &kp DOT        &kp FSLH  &kp RBKT
                         &mt LSHIFT ENTER  &mo 1  &lt 2 SPACE         &lt 1 ENTER  &mo 2      &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp KP_MULTIPLY  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &kp GRAVE  &kp F1  &kp F2   &kp F3   &kp F4   &none
&trans  &kp KP_DIVIDE    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &none      &kp F5  &kp F6   &kp F7   &kp F8   &none
&trans  &kp KP_DOT       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none      &kp F9  &kp F10  &kp F11  &kp F12  &none
                                       &trans        &trans        &trans                   &trans  &trans   &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp DELETE    &kp HOME    &kp UP_ARROW      &kp END     &kp ESC        &none  &none     &kp UP    &none      &kp SLCK         &kp C_VOLUME_UP
&trans  &kp INS       &kp LEFT    &kp DOWN          &kp RIGHT   &kp PAGE_UP    &none  &kp LEFT  &kp DOWN  &kp RIGHT  &kp INS          &kp C_VOLUME_DOWN
&trans  &kp LEFT_WIN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp PAGE_DOWN  &none  &none     &none     &none      &kp PAUSE_BREAK  &kp K_MUTE
                                  &trans            &trans      &trans                &trans    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none            &none            &to 4            &out OUT_BLE     &out OUT_USB  &out OUT_USB     &out OUT_USB     &none            &none            &none            &bootloader
&bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2     &bt BT_SEL 1     &bt BT_SEL 0     &bt BT_CLR
&sys_reset   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &check_bat    &rgb_ug RGB_TOG  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &sys_reset
                                               &trans           &none            &trans                         &trans           &trans           &trans
            >;
        };

        game_layer {
            bindings = <
&kp ESC  &kp TAB    &kp Q  &kp W  &kp E  &kp R      &none  &none  &none  &none  &none  &to 0
&none    &kp LSHFT  &kp A  &kp S  &kp D  &kp G      &none  &none  &none  &none  &none  &none
&none    &kp LCTRL  &kp Z  &kp X  &kp V  &kp F      &none  &none  &none  &none  &none  &none
                           &kp B  &kp C  &kp SPACE         &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
